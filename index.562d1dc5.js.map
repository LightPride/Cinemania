{"mappings":"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","sources":["src/js/home-trends.js"],"sourcesContent":["const container = document.getElementById('movies-container');\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst TABLET_WIDTH_THRESHOLD = 768;\nconst colWidthClass = 'col-md-4';\n\nasync function fetchTrendsMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    const movieData = await response.json();\n    return movieData.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function renderMovies(movies, count) {\n  const container = document.querySelector('#movies-container');\n  container.innerHTML = '';\n  const moviesContainer = document.createElement('ul');\n  moviesContainer.classList.add('weekly-list');\n  container.appendChild(moviesContainer);\n\n  movies.slice(0, count).forEach(async movie => {\n    const genres = await getGenresById(movie.genre_ids);\n    const li = document.createElement('li');\n    li.classList.add('weekly-item');\n\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('weekly-wrapper');\n\n    const movieDetails = document.createElement('div');\n    movieDetails.classList.add('weekly-info');\n\n    const shortenedTitle = movie.title.slice(0, movie.title.indexOf(':'));\n    const title = document.createElement('h3');\n    title.classList.add('weekly-info__title');\n    title.innerText = `${shortenedTitle}`;\n\n    const releaseDateAndGenre = document.createElement('span');\n    releaseDateAndGenre.classList.add('weekly-info__genres__data');\n    releaseDateAndGenre.innerText = `${genres\n      .split(',')\n      .slice(0, 1)\n      .join(', ')} | ${movie.release_date.slice(0, 4)}`;\n\n    const movieRating = document.createElement('div');\n    movieRating.classList.add('weekly-rating');\n    const ratingValue = document.createElement('span');\n    ratingValue.innerText = `${movie.vote_average.toFixed(1)}`;\n    movieRating.appendChild(ratingValue);\n\n    const additionalInfo = document.createElement('div');\n    additionalInfo.classList.add('catalog-list__additional-info');\n    additionalInfo.appendChild(releaseDateAndGenre);\n    additionalInfo.appendChild(movieRating);\n\n    const poster = document.createElement('img');\n    poster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    poster.alt = `${movie.title} movie poster`;\n    poster.classList.add('weekly-img');\n\n    movieDetails.appendChild(title);\n    movieDetails.appendChild(additionalInfo);\n\n    wrapper.appendChild(movieDetails);\n    li.appendChild(wrapper);\n    li.appendChild(poster);\n\n    moviesContainer.appendChild(li);\n  });\n}\n\nasync function getGenresById(genreIds) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n  const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.genres.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n\nasync function getFetchedMovies() {\n  let count;\n  if (window.innerWidth < TABLET_WIDTH_THRESHOLD) {\n    count = 1;\n  } else {\n    count = 3;\n  }\n  const movies = await fetchTrendsMovies();\n  renderMovies(movies, count);\n}\n\ngetFetchedMovies();\n\nwindow.addEventListener('resize', getFetchedMovies);\n"],"names":["$bpxeT","parcelRequire","$939ee5152d9a1dc7$var$API_KEY","document","getElementById","$939ee5152d9a1dc7$var$BASE_URL","$939ee5152d9a1dc7$var$fetchTrendsMovies","$939ee5152d9a1dc7$var$_fetchTrendsMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","movieData","fetch","concat","_ctx","sent","ok","Error","status","json","results","console","log","t0","$939ee5152d9a1dc7$var$renderMovies","movies","count","$939ee5152d9a1dc7$var$_renderMovies","_callee1","container1","moviesContainer","querySelector","innerHTML","createElement","classList","add","appendChild","slice","forEach","movie","genres","li","wrapper","movieDetails","shortenedTitle","title","releaseDateAndGenre","movieRating","ratingValue","additionalInfo","poster","$939ee5152d9a1dc7$var$getGenresById","genre_ids","indexOf","innerText","split","join","release_date","vote_average","toFixed","src","poster_path","alt","genreIds","$939ee5152d9a1dc7$var$_getGenresById","data","genreNames","map","genreId","find","genre","id","name","$939ee5152d9a1dc7$var$getFetchedMovies","$939ee5152d9a1dc7$var$_getFetchedMovies","window","innerWidth","addEventListener"],"version":3,"file":"index.562d1dc5.js.map"}