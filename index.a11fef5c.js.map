{"mappings":"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","sources":["src/js/home-trends.js"],"sourcesContent":["const container = document.querySelector('.weekly-trends__insert');\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\nasync function fetchTrendsMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`);\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        const movieData = await response.json();\n        return movieData.results;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nfunction getFetchedMovies() {\n    fetchTrendsMovies().then(movies => {\n        let count;\n\n        if (window.matchMedia('(max-width: 767px)').matches) {\n            // mobile\n            count = 1;\n        } else if (window.matchMedia('(max-width: 1023px)').matches) {\n            // desktop\n            count = 3;\n        }\n\n        renderMovies(movies, count);\n    }).catch(error => console.log(error));\n}\n\n\ngetFetchedMovies();\n\nasync function renderMovies(movies, count) {\n    const container = document.getElementById('movies-container');\n    container.innerHTML = '';\n\n    movies.slice(0, count).forEach(async movie => {\n        const genres = await getGenresById(movie.genre_ids);\n        const li = document.createElement('li');\n        const movieInfo = document.createElement('div');\n        const title = document.createElement('h3');\n        const img = document.createElement('img');\n        const rating = document.createElement('span');\n        const releaseDate = document.createElement('span');\n        const genre = document.createElement('span');\n\n        title.innerText = `${movie.title}`;\n        genre.innerText = `${genres}`;\n        releaseDate.innerText = `${movie.release_date.slice(0, 4)}`;\n        rating.innerText = `${movie.vote_average.toFixed(1)}`;\n        img.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        img.alt = `${movie.title} movie poster`;\n\n        movieInfo.appendChild(title);\n        movieInfo.appendChild(genre);\n        movieInfo.appendChild(releaseDate);\n\n        li.appendChild(img);\n        li.appendChild(movieInfo);\n        li.appendChild(rating);\n        container.appendChild(li);\n    });\n}\n\n\nasync function getGenresById(genreIds) {\n    const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n    const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n    const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n    const data = await response.json();\n\n    const genreNames = genreIds.map((genreId) => {\n        const genre = data.genres.find((genre) => genre.id === genreId);\n        return genre.name;\n    });\n\n    return genreNames.join(', ');\n}\n\nwindow.addEventListener('resize', () => {\n    getFetchedMovies();\n});\n\n\n\n\n\n"],"names":["$bpxeT","parcelRequire","$939ee5152d9a1dc7$var$API_KEY","document","querySelector","$939ee5152d9a1dc7$var$BASE_URL","$939ee5152d9a1dc7$var$_fetchTrendsMovies","$parcel$interopDefault","$2TvXO","mark","_callee","response","movieData","fetch","concat","_ctx","sent","ok","Error","status","json","results","console","log","t0","apply","this","arguments","$939ee5152d9a1dc7$var$getFetchedMovies","$939ee5152d9a1dc7$var$fetchTrendsMovies","then","movies","count","window","matchMedia","matches","$939ee5152d9a1dc7$var$_renderMovies","$939ee5152d9a1dc7$var$renderMovies","catch","error","_callee1","container1","getElementById","innerHTML","slice","forEach","movie","genres","li","movieInfo","title","img","rating","releaseDate","genre","$939ee5152d9a1dc7$var$getGenresById","genre_ids","createElement","innerText","release_date","vote_average","toFixed","src","poster_path","alt","appendChild","genreIds","$939ee5152d9a1dc7$var$_getGenresById","data","genreNames","map","genreId","find","id","name","join","addEventListener"],"version":3,"file":"index.a11fef5c.js.map"}