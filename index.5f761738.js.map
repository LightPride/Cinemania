{"mappings":"AAAkBA,SAASC,eAAe","sources":["src/js/home-trends.js"],"sourcesContent":["const container = document.getElementById('movies-container');\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst TABLET_WIDTH_THRESHOLD = 768;\nconst colWidthClass = 'col-md-4';\n\n\n\nasync function fetchTrendsMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`);\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        const movieData = await response.json();\n        return movieData.results;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nasync function renderMovies(movies, count) {\n    const container = document.querySelector('#movies-container'); \n    container.innerHTML = ''; \n    const moviesContainer = document.createElement('ul'); \n    moviesContainer.classList.add('weekly-list'); \n    container.appendChild(moviesContainer);\n\n    movies.slice(0, count).forEach(async (movie) => {\n        const genres = await getGenresById(movie.genre_ids);\n        const li = document.createElement('li');\n        li.classList.add('weekly-item');\n\n\n        const wrapper = document.createElement('div');\n        wrapper.classList.add('weekly-wrapper');\n\n        const movieDetails = document.createElement('div');\n        movieDetails.classList.add('weekly-info');\n\n        const shortenedTitle = movie.title.slice(0, movie.title.indexOf(':'));\n        const title = document.createElement('h3');\n        title.classList.add('weekly-info__title');\n        title.innerText = `${shortenedTitle}`;\n\n        const releaseDateAndGenre = document.createElement('span');\n        releaseDateAndGenre.classList.add('weekly-info__genres__data');\n        releaseDateAndGenre.innerText = `${genres.split(',').slice(0, 2).join(', ')} | ${movie.release_date.slice(0, 4)}`;\n\n        const movieRating = document.createElement('div');\n        movieRating.classList.add('weekly-rating');\n        const ratingValue = document.createElement('span');\n        ratingValue.innerText = `${movie.vote_average.toFixed(1)}`;\n        movieRating.appendChild(ratingValue);\n\n        const additionalInfo = document.createElement('div');\n        additionalInfo.classList.add('catalog-list__additional-info');\n        additionalInfo.appendChild(releaseDateAndGenre);\n        additionalInfo.appendChild(movieRating);\n\n        const poster = document.createElement('img');\n        poster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        poster.alt = `${movie.title} movie poster`;\n        poster.classList.add('weekly-img');\n\n        movieDetails.appendChild(title);\n        movieDetails.appendChild(additionalInfo);\n\n        wrapper.appendChild(movieDetails);\n        li.appendChild(wrapper);\n        li.appendChild(poster);\n\n        moviesContainer.appendChild(li);\n    });\n\n\n\nasync function getGenresById(genreIds) {\n    const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n    const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n    const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n    const data = await response.json();\n\n    const genreNames = genreIds.map((genreId) => {\n        const genre = data.genres.find((genre) => genre.id === genreId);\n        return genre.name;\n    });\n\n    return genreNames.join(', ');\n}\n\nasync function getFetchedMovies() {\n    let count;\n    if (window.innerWidth < TABLET_WIDTH_THRESHOLD) {\n        count = 1;\n    } else {\n        count = 3;\n    }\n    const movies = await fetchTrendsMovies();\n    renderMovies(movies, count);\n}\n\ngetFetchedMovies();\n\nwindow.addEventListener('resize', () => {\n    getFetchedMovies()\n});\n"],"names":["document","getElementById"],"version":3,"file":"index.5f761738.js.map"}