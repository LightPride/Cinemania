{"mappings":"AAAA,MAAMA,EAAO,CACXC,YAAaC,SAASC,cAAc,gBACpCC,eAAgBF,SAASC,cAAc,qBACvCE,WAAYH,SAASI,iBAAiB,uBAGlCL,YAAEM,EAAWH,eAAEI,EAAcH,WAAEI,GAAeT,EAiGlDS,EAAW,GAAGC,UAAUC,OAAO,WAC/BF,EAAW,GAAGC,UAAUC,OAAO,WAC/BF,EAAW,GAAGC,UAAUE,IAAI,WA/F9BZ,EAAKC,YAAYY,iBAAiB,UAElC,SAA6BC,GAC3BA,EAAEC,iBACFC,WAAa,GAEb,MAAMC,cAAEA,GAAkBH,EAAEI,cAI5B,GAFAF,WAAaC,EAAcE,MAER,KAAfH,WACF,QA4B8BI,EAzBPJ,WA6BlBK,MACL,kHAA8DD,KAC9DE,MAAKC,IACL,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,MAAM,KApCYL,MAAKM,IACxC,MAAMC,EAASD,EAAKE,QAAQC,KAAIC,IAC9B,MAAMC,EAAQD,EAAMC,MACdC,EAAa,kCAAkCF,EAAMG,cACrDC,EAAcJ,EAAMK,aAAaC,UAAU,EAAG,GAC9CC,EAAUP,EAAMQ,GAChBC,EAAST,EAAMU,WAkC3B,IAA4BC,KAjCHX,EAAMY,UAqCtBvB,MAAM,0FACVC,MAAKC,IACJ,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,MAAM,IAExBL,MAAKM,GACiBA,EAAKiB,OAAOC,QAAOC,IAEtC,GAAIJ,EAAIK,SAASD,EAAMP,IACrB,OAAOO,EAAM3B,IAAI,OAjDeE,MAAK2B,IACvC,MAAMF,EAAQE,EAASlB,KAAImB,GAAOA,EAAI9B,OAChC+B,EAAY,C,MAChBlB,E,WACAC,E,MACAa,E,YACAX,E,OACAK,E,QACAF,GAEFa,QAAQC,IAAIF,EAAU,GACtB,IAGJC,QAAQC,IAAIxB,EAAO,IAIvB,IAAkCT,C,IA6EzBC,MAAM,qGACVC,MAAKC,IACJ,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,MAAM,IAExBL,KAAK8B,QAAQC","sources":["src/js/catalog-search.js"],"sourcesContent":["const refs = {\n  catalogForm: document.querySelector('#search-form'),\n  catalogGallery: document.querySelector('.catalog__gallery'),\n  navigation: document.querySelectorAll('.navigation__link'),\n};\n\nconst { catalogForm, catalogGallery, navigation } = refs;\n\nchangeCurrentNavigation();\n\nrefs.catalogForm.addEventListener('submit', onCatalogFormSubmit);\n\nfunction onCatalogFormSubmit(e) {\n  e.preventDefault();\n  inputValue = '';\n\n  const { catalogSearch } = e.currentTarget;\n\n  inputValue = catalogSearch.value;\n\n  if (inputValue === '') {\n    return;\n  }\n\n  fetchCatalogSearchMovies(inputValue).then(data => {\n    const movies = data.results.map(movie => {\n      const title = movie.title;\n      const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      const releaseYear = movie.release_date.substring(0, 4);\n      const movieId = movie.id;\n      const rating = movie.popularity;\n      fetchInByMovieName(movie.genre_ids).then(genreArr => {\n        const genre = genreArr.map(gnr => gnr.name);\n        const cardsData = {\n          title,\n          posterPath,\n          genre,\n          releaseYear,\n          rating,\n          movieId,\n        };\n        console.log(cardsData);\n      });\n    });\n\n    console.log(movies);\n  });\n}\n\nfunction fetchCatalogSearchMovies(name) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\n  return fetch(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1&query=${name}`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction fetchInByMovieName(ids) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}`)\n    .then(movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n\n      return movieData.json();\n    })\n    .then(data => {\n      const searcedGenre = data.genres.filter(genre => {\n        // if (genre.id === id) {\n        if (ids.includes(genre.id)) {\n          return genre.name;\n        }\n      });\n\n      return searcedGenre;\n    });\n}\n\nfunction createGallery(movies) {\n  const generatedHtml = movies\n    .map(({ title, posterPath, genre, releaseYear, rating, movieId }) => {\n      const htmlPart = `\n        // \n        `;\n\n      return htmlPart;\n    })\n    .join('');\n\n  return generatedHtml;\n}\n\nfunction changeCurrentNavigation() {\n  navigation[0].classList.remove('current');\n  navigation[2].classList.remove('current');\n  navigation[1].classList.add('current');\n}\n\n// ? from \"fetchCatalogSearchMovies\"\n// .then(data => {\n//   console.log(data.results);\n//   const movie = data.results[0];\n//   const movieId = movie.id;\n// getMoviesById(movieId).then(movie => {\n//   const title = movie.title;\n//   const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n//   const genres = movie.genres.map(genre => genre.name);\n//   const releaseYear = movie.release_date.substring(0, 4);\n//   console.log(title, posterPath, genres, releaseYear);\n// });\n// });\n\nfunction getMoviesById(id) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/603692`;\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`)\n    .then(movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n\n      return movieData.json();\n    })\n    .then(console.log);\n}\n\ngetMoviesById();\n"],"names":["$263db3299b551903$var$refs","catalogForm","document","querySelector","catalogGallery","navigation","querySelectorAll","$263db3299b551903$var$catalogForm","$263db3299b551903$var$catalogGallery","$263db3299b551903$var$navigation","classList","remove","add","addEventListener","e","preventDefault","inputValue","catalogSearch","currentTarget","value","name","fetch","then","movieData","ok","Error","status","json","data","movies","results","map","movie","title","posterPath","poster_path","releaseYear","release_date","substring","movieId","id","rating","popularity","ids","genre_ids","genres","filter","genre","includes","genreArr","gnr","cardsData","console","log"],"version":3,"file":"catalog.1f431fcd.js.map"}