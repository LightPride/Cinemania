{"mappings":"AAAA,MAAMA,EAAiBC,SAASC,cAAc,qBA8G9CC,eAAeC,EAAcC,GAC3B,MAGMC,QAAiBC,MAAM,yGACvBC,QAAaF,EAASG,OAO5B,OALmBJ,EAASK,KAAIC,GAChBH,EAAKI,OAAOC,MAAKC,GAASA,EAAMC,KAAOJ,IACxCK,OAGGC,KAAK,K,EAtGzBd,iBACE,IACE,MACMe,SAbDX,MAAM,8GAAwDY,MACnEC,IACE,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAE5B,OAAOH,EAAUX,MAAM,KAQGe,QAG5B,GAAIN,EAAeO,QAAU,EAAG,CAC9B,MAAMC,EACJR,EAAeS,KAAKC,MAAMD,KAAKE,SAAWX,EAAeO,SACrDK,QAAmB1B,EAAcsB,EAAYK,WAC7CC,QAUZ7B,gBAA4B8B,YAC1BA,EAAWC,cACXA,EAAaC,MACbA,EAAKC,SACLA,EAAQC,WACRA,EAAUC,aACVA,EAAYC,WACZA,EAAUC,aACVA,EAAYT,UACZA,IAEA,MAAMD,QAAmB1B,EAAc2B,GAEvC,MAAO,2LAKmDG,iIACAA,+HACAD,yFACNA,6JAKZE,+YAUOK,2GAELF,yEAEAC,8ZAcQF,gEACDP,2JAOdM,+C,CAxEHK,CAAa,IAAKf,E,WAAaI,IAC3D9B,EAAe0C,mBAAmB,aAAcV,E,EAElD,MAAOW,GACPC,QAAQC,IAAIF,E,EAIhBG","sources":["src/js/upcoming.js"],"sourcesContent":["const insertionBlock = document.querySelector('.upcoming__insert');\n\n// TODO ФЕТЧ АБИ ОТРИМАТИ UPCOMING MOVIES\n\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = `https://api.themoviedb.org/3/movie/upcoming`;\n\nfunction fetchUpcomingMovies() {\n  // https://developers.themoviedb.org/3/movies/get-upcoming\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`).then(\n    movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n      return movieData.json();\n    }\n  );\n}\n\nasync function getFetchedMovies() {\n  try {\n    const data = await fetchUpcomingMovies();\n    const returnedResult = data.results;\n    // console.log(returnedResult);\n\n    if (returnedResult.length >= 1) {\n      const randomMovie =\n        returnedResult[Math.floor(Math.random() * returnedResult.length)];\n      const genreNames = await getGenresById(randomMovie.genre_ids);\n      const createdMarkup = await renderMarkup({ ...randomMovie, genreNames });\n      insertionBlock.insertAdjacentHTML('afterbegin', createdMarkup);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ngetFetchedMovies();\n\nasync function renderMarkup({\n  poster_path,\n  backdrop_path,\n  title,\n  overview,\n  popularity,\n  vote_average,\n  vote_count,\n  release_date,\n  genre_ids,\n}) {\n  const genreNames = await getGenresById(genre_ids);\n\n  return `\n    <div class=\"desktop-positioning\">\n      <div class=\"desktop-left\">\n      \n      <picture class='.upcoming__poster'>\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 1220px)\" class='upcoming__poster-desktop' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 768px)\" class='upcoming__poster-tablet' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\" media=\"(min-width: 320px)\" />\n      <img src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"Movie Poster\" style='width: 805px'/>\n    </picture>\n\n      </div>\n      <div class=\"desktop-right\"> \n        <p class=\"upcoming__movie-name\">${title}</p>\n\n        <div class=\"upcoming__infolist\">\n          <div class=\"first-upcoming-div\">\n\n            <ul class=\"rel-vote-list\">\n              <li><p class=\"upcoming__about-item\">Release date</p></li>\n              <li><p class=\"upcoming__about-item\">Vote / Votes</p></li>\n            </ul>\n            <ul class=\"rel-vote-list-value\" >\n              <li><p class=\"upcoming__release\">${release_date}</p></li>\n              <li><p class=\"upcoming__vote\"></p>\n              <span class=\"vote__styling\">${vote_average}</span>\n              / \n              <span class=\"vote__styling\">${vote_count}</span>\n              </li>\n            </ul>\n\n          </div>\n\n          <div class=\"second-upcoming-div\">\n\n            <ul class=\"pop-gen-list\">\n              <li><p class=\"upcoming__about-item\">Popularity</p></li>\n              <li><p class=\"upcoming__about-item\">Genre</p></li>\n            </ul>\n\n            <ul class=\"pop-gen-list-value\">\n              <li><p class=\"upcoming__popularity\">${popularity}</p></li>\n              <li><p class=\"upcoming__genre\"></p>${genreNames}</li>\n            </ul>\n\n          </div>\n        </div>\n\n        <p class=\"upcoming__about-title\">ABOUT</p>\n        <p class=\"upcoming__about\">${overview}</p>\n\n      \n      </div>\n    </div>\n  `;\n}\n\nasync function getGenresById(genreIds) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n  const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.genres.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n"],"names":["$65414923e0a79c46$var$insertionBlock","document","querySelector","async","$65414923e0a79c46$var$getGenresById","genreIds","response","fetch","data","json","map","genreId","genres","find","genre","id","name","join","returnedResult","then","movieData","ok","Error","status","results","length","randomMovie","Math","floor","random","genreNames","genre_ids","createdMarkup","poster_path","backdrop_path","title","overview","popularity","vote_average","vote_count","release_date","$65414923e0a79c46$var$renderMarkup","insertAdjacentHTML","error","console","log","$65414923e0a79c46$var$getFetchedMovies"],"version":3,"file":"index.d9aa846a.js.map"}