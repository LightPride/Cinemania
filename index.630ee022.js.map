{"mappings":"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","sources":["src/js/home-trends.js"],"sourcesContent":["const container = document.getElementById('movies-container');\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst TABLET_WIDTH_THRESHOLD = 768;\nconst colWidthClass = 'col-md-4';\n\n\n\nasync function fetchTrendsMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`);\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        const movieData = await response.json();\n        return movieData.results;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nasync function renderMovies(movies, count) {\n    container.innerHTML = '';\n    const moviesContainer = document.createElement('ul');\n    moviesContainer.id = 'movies-container';\n    moviesContainer.classList.add('weekly-list', 'd-flex', 'flex-wrap');\n    container.appendChild(moviesContainer);\n\n    movies.slice(0, count).forEach(async (movie) => {\n        const genres = await getGenresById(movie.genre_ids);\n        const li = document.createElement('li');\n        li.classList.add('weekly-item');\n\n        const movieDetails = document.createElement('div');\n        movieDetails.classList.add('weekly-wrapper');\n\n        const shortenedTitle = movie.title.slice(0, movie.title.indexOf(':'));\n        const title = document.createElement('h3');\n        title.classList.add('weekly-info__title');\n        title.innerText = `${shortenedTitle}`;\n\n        const releaseDateAndGenre = document.createElement('span');\n        releaseDateAndGenre.classList.add('weekly-info__genres__data');\n        releaseDateAndGenre.innerText = `${genres.split(',').slice(0, 2).join(', ')} | ${movie.release_date.slice(0, 4)}`;\n\n        const movieRating = document.createElement('div');\n        movieRating.classList.add('weekly-rating');\n        const ratingValue = document.createElement('span');\n        ratingValue.innerText = `${movie.vote_average.toFixed(1)}`;\n        movieRating.appendChild(ratingValue);\n\n        const poster = document.createElement('img');\n        poster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        poster.alt = `${movie.title} movie poster`;\n        poster.classList.add('weekly-img');\n\n        movieDetails.appendChild(title);\n        movieDetails.appendChild(releaseDateAndGenre);\n\n        li.appendChild(movieDetails);\n        li.appendChild(movieRating);\n        li.appendChild(poster);\n\n        moviesContainer.appendChild(li);\n    });\n\n    if (window.innerWidth < TABLET_WIDTH_THRESHOLD) {\n        moviesContainer.style.gap = '0';\n    }\n}\n\n\n\n\n\n\n\nasync function getGenresById(genreIds) {\n    const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n    const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n    const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n    const data = await response.json();\n\n    const genreNames = genreIds.map((genreId) => {\n        const genre = data.genres.find((genre) => genre.id === genreId);\n        return genre.name;\n    });\n\n    return genreNames.join(', ');\n}\n\nasync function getFetchedMovies() {\n    let count;\n    if (window.innerWidth < TABLET_WIDTH_THRESHOLD) {\n        count = 1;\n    } else {\n        count = 3;\n    }\n    const movies = await fetchTrendsMovies();\n    renderMovies(movies, count);\n}\n\ngetFetchedMovies();\n\nwindow.addEventListener('resize', () => {\n    getFetchedMovies()\n});\n"],"names":["$bpxeT","parcelRequire","$939ee5152d9a1dc7$var$container","document","getElementById","$939ee5152d9a1dc7$var$API_KEY","$939ee5152d9a1dc7$var$BASE_URL","$939ee5152d9a1dc7$var$TABLET_WIDTH_THRESHOLD","$939ee5152d9a1dc7$var$fetchTrendsMovies","$939ee5152d9a1dc7$var$_fetchTrendsMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","movieData","fetch","concat","_ctx","sent","ok","Error","status","json","results","console","log","t0","$939ee5152d9a1dc7$var$renderMovies","movies","count","$939ee5152d9a1dc7$var$_renderMovies","_callee1","moviesContainer","innerHTML","createElement","id","classList","add","appendChild","slice","forEach","movie","genres","li","movieDetails","shortenedTitle","title","releaseDateAndGenre","movieRating","ratingValue","poster","$939ee5152d9a1dc7$var$getGenresById","genre_ids","indexOf","innerText","split","join","release_date","vote_average","toFixed","src","poster_path","alt","window","innerWidth","style","gap","genreIds","$939ee5152d9a1dc7$var$_getGenresById","data","genreNames","map","genreId","find","genre","name","$939ee5152d9a1dc7$var$getFetchedMovies","$939ee5152d9a1dc7$var$_getFetchedMovies","addEventListener"],"version":3,"file":"index.630ee022.js.map"}