{"mappings":"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","sources":["src/js/catalog-search.js"],"sourcesContent":["const refs = {\n  catalogForm: document.querySelector('#search-form'),\n  catalogGallery: document.querySelector('.catalog__gallery'),\n};\n\nconst { catalogForm, catalogGallery } = refs;\n\nlet page = 1;\nlet inputValue = '';\n\ncatalogForm.addEventListener('submit', onSubmit);\ncatalogGallery.addEventListener('click', onCatalogGalleryClick);\n\nonCatalogLoad();\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  page = 1;\n\n  const { catalogSearch } = e.currentTarget;\n\n  inputValue = catalogSearch.value;\n\n  if (inputValue === '') {\n    onCatalogLoad();\n    return;\n  }\n\n  onCatalogFormSubmit();\n}\n\nfunction onCatalogLoad() {\n  fetchMovieGenres().then(genres => {\n    fetchCatalogTrendMovies(page).then(async data => {\n      const movies = data.results.slice(0, 10);\n\n      const cardsData = movies.map(movie => {\n        const title = movie.title;\n        const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        const releaseYear = movie.release_date.substring(0, 4);\n        const movieId = movie.id;\n        const rating = movie.vote_average;\n        const movieGenres = genres.genres\n          .filter(genre => {\n            if (movie.genre_ids.includes(genre.id)) {\n              return genre;\n            }\n          })\n          .map(genre => genre.name);\n\n        return {\n          title,\n          posterPath,\n          movieGenres,\n          releaseYear,\n          rating,\n          movieId,\n        };\n      });\n\n      catalogGallery.innerHTML = await createGallery(cardsData);\n    });\n  });\n}\n\nfunction onCatalogFormSubmit() {\n  fetchMovieGenres().then(genres => {\n    fetchCatalogSearchMovies(inputValue, page).then(async data => {\n      const movies = data.results.slice(0, 10);\n\n      const cardsData = movies.map(movie => {\n        const title = movie.title;\n        const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        const releaseYear = movie.release_date.substring(0, 4);\n        const movieId = movie.id;\n        const rating = movie.vote_average;\n        const movieGenres = genres.genres\n          .filter(genre => {\n            if (movie.genre_ids.includes(genre.id)) {\n              return genre;\n            }\n          })\n          .map(genre => genre.name);\n\n        return {\n          title,\n          posterPath,\n          movieGenres,\n          releaseYear,\n          rating,\n          movieId,\n        };\n      });\n\n      catalogGallery.innerHTML = await createGallery(cardsData);\n    });\n  });\n}\n\nfunction fetchCatalogTrendMovies(page) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction fetchCatalogSearchMovies(name, page) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\n  return fetch(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${page}&query=${name}`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction fetchMovieGenres() {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}`).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction createGallery(movies) {\n  const generatedHtml = movies\n    .map(({ title, posterPath, movieGenres, releaseYear, rating, movieId }) => {\n      const genres = movieGenres[0];\n\n      const htmlPart = `\n        <li class=\"movie__card\" data-id=\"${movieId}\">\n        <div class=\"movie__card-poster\" style=\"background-image: linear-gradient(rgba(0,0,0,0),rgba(0, 0, 0, 0), rgba(0,0,0,1)),\n  url(${posterPath});\" data-id=\"${movieId}\"></div>\n\n        <div class=\"movie__card-info\" data-id=\"${movieId}\">\n          <h3 data-id=\"${movieId}\">${title}</h3>\n          <p data-id=\"${movieId}\"><span data-id=\"${movieId}\">${genres}</span> | <span data-id=\"${movieId}\">${releaseYear}</span></p>\n        </div>\n\n        <div class=\"movie__card-rating\" data-id=\"${movieId}\">${createStarRating(\n        rating\n      )}</div>\n      </li> \n        `;\n\n      return htmlPart;\n    })\n    .join('');\n\n  return generatedHtml;\n}\n\nfunction onCatalogGalleryClick(e) {\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  const targetCard = e.target;\n\n  localStorage.setItem('film-id', `${targetCard.dataset.id}`);\n}\n\nfunction createStarRating(rating) {\n  const starsContainer = document.createElement('div');\n  starsContainer.classList.add('stars-container');\n  const grayStars = document.createElement('div');\n  grayStars.classList.add('st-gray');\n  grayStars.classList.add('flex');\n  grayStars.innerHTML = '⭐⭐⭐⭐⭐';\n  const fullStars = document.createElement('div');\n  fullStars.innerHTML = '⭐⭐⭐⭐⭐';\n  fullStars.classList.add('st');\n  fullStars.classList.add('flex');\n  starsContainer.append(grayStars, fullStars);\n  document.body.appendChild(starsContainer);\n  const height = fullStars.offsetHeight;\n  fullStars.style.width = `${(rating / 2) * height}px`;\n\n  const innerStarsContainer = starsContainer.outerHTML;\n  return innerStarsContainer;\n}\n\n// function createStarRatingInner(rating) {\n//   console.log(rating);\n//   const height = 14;\n//   const grayStars = `<div class='st-gray flex'>⭐⭐⭐⭐⭐</div>`;\n//   const fullStars = `<div class='st flex' style='width: ${\n//     (rating / 2) * height\n//   }px'>⭐⭐⭐⭐⭐</div>`;\n//   const starsContainer = `<div class='stars-container'>${grayStars}${fullStars}</div>`;\n//   return starsContainer;\n// }\n"],"names":["$bpxeT","parcelRequire","$dffebb1ffafe4b15$var$refs","catalogForm","document","querySelector","catalogGallery","$dffebb1ffafe4b15$var$catalogGallery","$dffebb1ffafe4b15$var$page","$dffebb1ffafe4b15$var$inputValue","$dffebb1ffafe4b15$var$onCatalogLoad","$dffebb1ffafe4b15$var$fetchMovieGenres","then","genres","page1","fetch","concat","movieData","ok","Error","status","json","$parcel$interopDefault","$2TvXO","mark","_callee","data","movies","cardsData","results","slice","map","movie","title","posterPath","poster_path","releaseYear","release_date","substring","movieId","id","rating","vote_average","movieGenres","filter","genre","genre_ids","includes","name","$dffebb1ffafe4b15$var$createGallery","innerHTML","_ctx","sent","param","htmlPart","starsContainer","createElement","classList","add","grayStars","fullStars","append","body","appendChild","height","offsetHeight","style","width","outerHTML","$dffebb1ffafe4b15$var$createStarRating","join","addEventListener","e","preventDefault","catalogSearch","currentTarget","value","page2","API_KEY","target","nodeName","targetCard","localStorage","setItem","dataset"],"version":3,"file":"catalog.ddcb988d.js.map"}