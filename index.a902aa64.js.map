{"mappings":"AAAA,MAAMA,EAAiBC,SAASC,cAAc,qBA2K9CC,eAAeC,EAAcC,GAC3B,MAGMC,QAAiBC,MAAM,yGACvBC,QAAaF,EAASG,OAO5B,OALmBJ,EAASK,KAAKC,GACjBH,EAAKI,OAAOC,MAAMC,GAAUA,EAAMC,KAAOJ,IAC1CK,OAGGC,KAAK,K,EAjJzBd,iBACE,IACE,MACMe,SA/BCX,MAAM,8GACZY,MAAKC,IAEF,IAAKA,EAAUC,GACX,MAAM,IAAIC,MAAMF,EAAUG,QAE9B,OAAOH,EAAUX,MAAM,KAyBCe,QAG5B,GAFAC,QAAQC,IAAIR,GAERA,EAAeS,QAAU,EAAG,CAC9B,MAAMC,EAAcV,EAAeW,KAAKC,MAAMD,KAAKE,SAAWb,EAAeS,SACvEK,QAAmB5B,EAAcwB,EAAYK,WAC7CC,QAgEZ/B,gBAA4BgC,YAAEA,EAAWC,cAAEA,EAAaC,MAAEA,EAAKC,SAAEA,EAAQC,WAAEA,EAAUC,aAAEA,EAAYC,WAAEA,EAAUC,aAAEA,EAAYT,UAAEA,IAC7H,MAAMD,QAAmB5B,EAAc6B,GAEvC,MAAO,kKAIwCE,yDACGC,8DACAD,sIAMVE,+YAUOK,2GAELF,yEAEAC,8ZAcQF,gEACDP,2JAOdM,+G,CAnHHK,CAAa,IAAKf,E,WAAaI,IAC3DhC,EAAe4C,mBAAmB,YAAaV,E,EAEjD,MAAOW,GACPpB,QAAQC,IAAImB,E,EAIhBC","sources":["src/js/upcoming.js"],"sourcesContent":["const insertionBlock = document.querySelector('.upcoming__insert');\n\n// TODO ФЕТЧ АБИ ОТРИМАТИ UPCOMING MOVIES\n\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = `https://api.themoviedb.org/3/movie/upcoming`;\n\nfunction fetchUpcomingMovies() {\n// https://developers.themoviedb.org/3/movies/get-upcoming\n\n    return fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`)\n    .then(movieData => {\n\n        if (!movieData.ok) {\n            throw new Error(movieData.status)\n          }\n        return movieData.json()\n       \n      })\n}\n\n// function getFetchedMovies() {\n//   fetchUpcomingMovies()\n//     .then(data => {\n//       const returnedResult = data.results\n//       console.log(returnedResult);\n\n//       if (returnedResult.length >= 1) {\n//         const randomMovie = returnedResult[Math.floor(Math.random() * returnedResult.length)];\n//         const createdMarkup = renderMarkup(randomMovie);\n//         insertionBlock.insertAdjacentHTML('beforeend', createdMarkup);\n//       }\n//     })\n//     .catch(error => console.log(error));\n// }\n\n// TODO ВИКЛИК ФУНКЦІЇ ФЕТЧУ\n\nasync function getFetchedMovies() {\n  try {\n    const data = await fetchUpcomingMovies();\n    const returnedResult = data.results;\n    console.log(returnedResult);\n\n    if (returnedResult.length >= 1) {\n      const randomMovie = returnedResult[Math.floor(Math.random() * returnedResult.length)];\n      const genreNames = await getGenresById(randomMovie.genre_ids);\n      const createdMarkup = await renderMarkup({ ...randomMovie, genreNames });\n      insertionBlock.insertAdjacentHTML('beforeend', createdMarkup);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ngetFetchedMovies()\n\n// function renderMarkup({ poster_path, title, overview, popularity, vote_average, vote_count, release_date, genre_ids}) {\n\n// return `\n// <div class=\"desktop-positioning\">\n// <div class=\"desktop-left\">\n//   <img class=\"upcoming__poster\"\n//      src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n//      alt=\"Movie Poster\">\n// </div>\n// <div class=\"desktop-right\"> \n//   <p class=\"upcoming__movie-name\">${title}</p>\n\n// <div class=\"upcoming__infolist\">\n//   <div class=\"first-upcoming-div\">\n\n//     <ul class=\"rel-vote-list\">\n//       <li><p class=\"upcoming__about-item\">Release date</p></li>\n//       <li><p class=\"upcoming__about-item\">Vote / Votes</p></li>\n//     </ul>\n//     <ul class=\"rel-vote-list-value\" >\n//       <li><p class=\"upcoming__release\">${release_date}</p></li>\n//       <li><p class=\"upcoming__vote\"></p>\n//       <span class=\"vote__styling\">${vote_average}</span>\n//        / \n//       <span class=\"vote__styling\">${vote_count}</span>\n//        </li>\n//     </ul>\n\n//   </div>\n\n//   <div class=\"second-upcoming-div\">\n\n//     <ul class=\"pop-gen-list\">\n//       <li><p class=\"upcoming__about-item\">Popularity</p></li>\n//       <li><p class=\"upcoming__about-item\">Genre</p></li>\n//     </ul>\n\n//     <ul class=\"pop-gen-list-value\">\n//       <li><p class=\"upcoming__popularity\">${popularity}</p></li>\n//       <li><p class=\"upcoming__genre\"></p>${getGenresById(genre_ids)}</li>\n//     </ul>\n\n//   </div>\n// </div>\n\n// <p class=\"upcoming__about-title\">ABOUT</p>\n// <p class=\"upcoming__about\">${overview}</p>\n\n// <button type=\"button\" class=\"upcoming__btn\">Remind me</button>\n// </div>\n// </div>\n// `\n// }\n\nasync function renderMarkup({ poster_path, backdrop_path, title, overview, popularity, vote_average, vote_count, release_date, genre_ids}) {\n  const genreNames = await getGenresById(genre_ids);\n\n  return `\n    <div class=\"desktop-positioning\">\n      <div class=\"desktop-left\">\n      <img class=\"upcoming__poster\"\n      src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n      srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path} 768w,\n              https://image.tmdb.org/t/p/original/${poster_path} 480w\"\n\n      alt=\"Movie Poster\">\n \n      </div>\n      <div class=\"desktop-right\"> \n        <p class=\"upcoming__movie-name\">${title}</p>\n\n        <div class=\"upcoming__infolist\">\n          <div class=\"first-upcoming-div\">\n\n            <ul class=\"rel-vote-list\">\n              <li><p class=\"upcoming__about-item\">Release date</p></li>\n              <li><p class=\"upcoming__about-item\">Vote / Votes</p></li>\n            </ul>\n            <ul class=\"rel-vote-list-value\" >\n              <li><p class=\"upcoming__release\">${release_date}</p></li>\n              <li><p class=\"upcoming__vote\"></p>\n              <span class=\"vote__styling\">${vote_average}</span>\n              / \n              <span class=\"vote__styling\">${vote_count}</span>\n              </li>\n            </ul>\n\n          </div>\n\n          <div class=\"second-upcoming-div\">\n\n            <ul class=\"pop-gen-list\">\n              <li><p class=\"upcoming__about-item\">Popularity</p></li>\n              <li><p class=\"upcoming__about-item\">Genre</p></li>\n            </ul>\n\n            <ul class=\"pop-gen-list-value\">\n              <li><p class=\"upcoming__popularity\">${popularity}</p></li>\n              <li><p class=\"upcoming__genre\"></p>${genreNames}</li>\n            </ul>\n\n          </div>\n        </div>\n\n        <p class=\"upcoming__about-title\">ABOUT</p>\n        <p class=\"upcoming__about\">${overview}</p>\n\n        <button type=\"button\" class=\"upcoming__btn\">Remind me</button>\n      </div>\n    </div>\n  `;\n}\n\n\nasync function getGenresById(genreIds) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n  const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  const genreNames = genreIds.map((genreId) => {\n    const genre = data.genres.find((genre) => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n"],"names":["$65414923e0a79c46$var$insertionBlock","document","querySelector","async","$65414923e0a79c46$var$getGenresById","genreIds","response","fetch","data","json","map","genreId","genres","find","genre","id","name","join","returnedResult","then","movieData","ok","Error","status","results","console","log","length","randomMovie","Math","floor","random","genreNames","genre_ids","createdMarkup","poster_path","backdrop_path","title","overview","popularity","vote_average","vote_count","release_date","$65414923e0a79c46$var$renderMarkup","insertAdjacentHTML","error","$65414923e0a79c46$var$getFetchedMovies"],"version":3,"file":"index.a902aa64.js.map"}