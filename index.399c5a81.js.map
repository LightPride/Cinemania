{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,KCCAC,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QAER,SAAuBC,GACnB,IAAI,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAI,CACrC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAC/CI,EAAUV,OAAOW,KAAKF,GACkB,mBAAjCT,OAAOY,wBACdF,EAAUA,EAAQG,OAAOb,OAAOY,sBAAsBH,GAAQK,QAAO,SAASC,GAC1E,OAAOf,OAAOgB,yBAAyBP,EAAQM,GAAKE,U,MAG5DP,EAAQQ,SAAQ,SAASC,GACrBC,EAAqBhB,QAAQC,EAAQc,EAAKV,EAAOU,G,IAGzD,OAAOd,C,EAdX,IAgBgCgB,EAhB5BD,GAgB4BC,EAhBatB,EAAA,WAiB3BsB,EAAIC,WAAaD,EAAM,CACjCjB,QAASiB,G,iBDvBXE,EAAiBC,SAASC,cAAc,qBAO9C,SAASC,IAGP,OAAOC,MAAM,GAAuBd,OALpB,8CAKS,aAAmBA,OAN9B,mCAM8B,2BAAyBe,MACnE,SAAAC,GACE,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAE5B,OAAOH,EAAUI,M,aAKRC,I,OAAAA,EAAfC,EAAArC,EAAA,CAAAqC,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,EACAC,EAIEC,EAEAC,EACAC,E,2FARWjB,I,UAAba,EAAIK,EAAAC,QACJL,EAAiBD,EAAKO,SAGTtC,QAAU,GAAC,C,uBACtBiC,EACJD,EAAeO,KAAKC,MAAMD,KAAKE,SAAWT,EAAehC,S,SAClC0C,EAAcT,EAAYU,W,cAA7CT,EAAUE,EAAAC,K,UACYO,EAAajB,EAAAjC,EAAA,IAAKuC,EAAW,CAAEC,gB,QAArDC,EAAaC,EAAAC,KACnBtB,EAAe8B,mBAAmB,aAAcV,G,0DAGlDW,QAAQC,IAAGX,EAAAY,I,2DAdgBC,MAAAC,KAAAnD,U,UAoBhB6C,EAAaO,G,OAAbC,EAAYH,MAAAC,KAAAnD,U,UAAZqD,I,OAAAA,EAAfzB,EAAArC,EAAA,CAAAqC,EAAAC,GAAAC,MAAA,SAAAC,EAA4BuB,G,IAC1BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlB,EAEMT,E,yEAVNoB,EAD0BD,EAC1BC,YACAC,EAF0BF,EAE1BE,cACAC,EAH0BH,EAG1BG,MACAC,EAJ0BJ,EAI1BI,SACAC,EAL0BL,EAK1BK,WACAC,EAN0BN,EAM1BM,aACAC,EAP0BP,EAO1BO,WACAC,EAR0BR,EAQ1BQ,aACAlB,EAT0BU,EAS1BV,U,SAEyBD,EAAcC,G,cAAjCT,EAAUE,EAAAC,K,kBAET,6LAMmDhC,OADAkD,EAAc,mIAEdlD,OADAkD,EAAc,iIAEpBlD,OADMiD,EAAY,yFAM9BjD,OALYiD,EAAY,+JAejBjD,OAVPmD,EAAM,+YAYJnD,OAFKwD,EAAa,2GAIlBxD,OAFAsD,EAAa,yEAgBLtD,OAdRuD,EAAW,8ZAeJvD,OADCqD,EAAW,gEAQ1BrD,OAPc6B,EAAW,2JAOhB7B,OAAToD,EAAS,gI,4CA9DnBR,MAAAC,KAAAnD,U,UAsEZ2C,EAAcoB,G,OAAdC,EAAad,MAAAC,KAAAnD,U,UAAbgE,I,OAAAA,EAAfpC,EAAArC,EAAA,CAAAqC,EAAAC,GAAAC,MAAA,SAAAC,EAA6BgC,G,IAIrBE,EACAjC,EAEAG,E,wEANU,mCACE,gD,SAEKf,MAAM,GAAuBd,OAFlC,gDAEuB,aAAmBA,OAH5C,mCAG4C,oB,cAAtD2D,EAAQ5B,EAAAC,K,SACK2B,EAASvC,O,cAAtBM,EAAIK,EAAAC,KAEJH,EAAa4B,EAASG,KAAI,SAAAC,GAE9B,OADcnC,EAAKoC,OAAOC,MAAK,SAAAC,G,OAASA,EAAMC,KAAOJ,C,IACxCK,I,sBAGRrC,EAAWsC,KAAK,O,6CAZGvB,MAAAC,KAAAnD,U,aA1Fb2B,EAAgBuB,MAAAC,KAAAnD,U,CAkB/B0E,E","sources":["src/js/upcoming.js","node_modules/@swc/helpers/lib/_object_spread.js"],"sourcesContent":["const insertionBlock = document.querySelector('.upcoming__insert');\n\n// TODO ФЕТЧ АБИ ОТРИМАТИ UPCOMING MOVIES\n\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = `https://api.themoviedb.org/3/movie/upcoming`;\n\nfunction fetchUpcomingMovies() {\n  // https://developers.themoviedb.org/3/movies/get-upcoming\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`).then(\n    movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n      return movieData.json();\n    }\n  );\n}\n\nasync function getFetchedMovies() {\n  try {\n    const data = await fetchUpcomingMovies();\n    const returnedResult = data.results;\n    // console.log(returnedResult);\n\n    if (returnedResult.length >= 1) {\n      const randomMovie =\n        returnedResult[Math.floor(Math.random() * returnedResult.length)];\n      const genreNames = await getGenresById(randomMovie.genre_ids);\n      const createdMarkup = await renderMarkup({ ...randomMovie, genreNames });\n      insertionBlock.insertAdjacentHTML('afterbegin', createdMarkup);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ngetFetchedMovies();\n\nasync function renderMarkup({\n  poster_path,\n  backdrop_path,\n  title,\n  overview,\n  popularity,\n  vote_average,\n  vote_count,\n  release_date,\n  genre_ids,\n}) {\n  const genreNames = await getGenresById(genre_ids);\n\n  return `\n    <div class=\"desktop-positioning\">\n      <div class=\"desktop-left\">\n      \n      <picture class='.upcoming__poster'>\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 1220px)\" class='upcoming__poster-desktop' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 768px)\" class='upcoming__poster-tablet' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\" media=\"(min-width: 320px)\" />\n      <img src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"Movie Poster\" style='width: 805px'/>\n    </picture>\n\n      </div>\n      <div class=\"desktop-right\"> \n        <p class=\"upcoming__movie-name\">${title}</p>\n\n        <div class=\"upcoming__infolist\">\n          <div class=\"first-upcoming-div\">\n\n            <ul class=\"rel-vote-list\">\n              <li><p class=\"upcoming__about-item\">Release date</p></li>\n              <li><p class=\"upcoming__about-item\">Vote / Votes</p></li>\n            </ul>\n            <ul class=\"rel-vote-list-value\" >\n              <li><p class=\"upcoming__release\">${release_date}</p></li>\n              <li><p class=\"upcoming__vote\"></p>\n              <span class=\"vote__styling\">${vote_average}</span>\n              / \n              <span class=\"vote__styling\">${vote_count}</span>\n              </li>\n            </ul>\n\n          </div>\n\n          <div class=\"second-upcoming-div\">\n\n            <ul class=\"pop-gen-list\">\n              <li><p class=\"upcoming__about-item\">Popularity</p></li>\n              <li><p class=\"upcoming__about-item\">Genre</p></li>\n            </ul>\n\n            <ul class=\"pop-gen-list-value\">\n              <li><p class=\"upcoming__popularity\">${popularity}</p></li>\n              <li><p class=\"upcoming__genre\"></p>${genreNames}</li>\n            </ul>\n\n          </div>\n        </div>\n\n        <p class=\"upcoming__about-title\">ABOUT</p>\n        <p class=\"upcoming__about\">${overview}</p>\n\n        <button type=\"button\" class=\"linear_btn\" id=\"upcoming_btn\">Remind me</button>\n      </div>\n    </div>\n  `;\n}\n\nasync function getGenresById(genreIds) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n  const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.genres.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n"],"names":["$bpxeT","parcelRequire","Object","defineProperty","$9eddae5a012cde57$exports","value","default","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","$9eddae5a012cde57$var$_defineProperty","obj","__esModule","$4c6aab06649ec8ef$var$insertionBlock","document","querySelector","$4c6aab06649ec8ef$var$fetchUpcomingMovies","fetch","then","movieData","ok","Error","status","json","$4c6aab06649ec8ef$var$_getFetchedMovies","$parcel$interopDefault","$2TvXO","mark","_callee","data","returnedResult","randomMovie","genreNames","createdMarkup","_ctx","sent","results","Math","floor","random","$4c6aab06649ec8ef$var$getGenresById","genre_ids","$4c6aab06649ec8ef$var$renderMarkup","insertAdjacentHTML","console","log","t0","apply","this","_","$4c6aab06649ec8ef$var$_renderMarkup","param","poster_path","backdrop_path","title","overview","popularity","vote_average","vote_count","release_date","genreIds","$4c6aab06649ec8ef$var$_getGenresById","response","map","genreId","genres","find","genre","id","name","join","$4c6aab06649ec8ef$var$getFetchedMovies"],"version":3,"file":"index.399c5a81.js.map"}