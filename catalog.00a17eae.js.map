{"mappings":"YAAA,IAAMA,EAAO,CACXC,YAAaC,SAASC,cAAc,gBACpCC,eAAgBF,SAASC,cAAc,qBACvCE,WAAYH,SAASI,iBAAiB,sBAGHC,GAAeP,EAA5CC,YAA4CD,EAA/BI,eAA+BJ,EAAfK,YAiGnCE,EAAW,GAAGC,UAAUC,OAAO,WAC/BF,EAAW,GAAGC,UAAUC,OAAO,WAC/BF,EAAW,GAAGC,UAAUE,IAAI,WA/F9BV,EAAKC,YAAYU,iBAAiB,UAElC,SAA6BC,GAC3BA,EAAEC,iBACFC,WAAa,GAEb,IAAMC,EAAoBH,EAAEI,cAApBD,cAIR,GAFAD,WAAaC,EAAcE,MAER,KAAfH,WACF,QA4B8BI,EAzBPJ,WA0BnBK,EAAU,mCAGTC,MACL,GAAuBC,OAHR,4CAGH,aAAkDA,OAAvCF,EAAQ,iCAAoCE,OAALH,IAC9DI,MAAK,SAAAC,GACL,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,M,KApCkBL,MAAK,SAAAM,GACxC,IAAMC,EAASD,EAAKE,QAAQC,KAAI,SAAAC,GAC9B,IAAMC,EAAQD,EAAMC,MACdC,EAAa,kCAAoDb,OAAlBW,EAAMG,aACrDC,EAAcJ,EAAMK,aAAaC,UAAU,EAAG,GAC9CC,EAAUP,EAAMQ,GAChBC,EAAST,EAAMU,YAkC3B,SAA4BC,GAC1B,IAAMxB,EAAU,mCAGhB,OAAOC,MAAM,GAAuBC,OAFnB,gDAEQ,aAAmBA,OAARF,IACjCG,MAAK,SAAAC,GACJ,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,M,IAElBL,MAAK,SAAAM,GAQJ,OAPqBA,EAAKgB,OAAOC,QAAO,SAAAC,GAEtC,GAAIH,EAAII,SAASD,EAAMN,IACrB,OAAOM,EAAM5B,I,QAjDjB8B,CAAmBhB,EAAMiB,WAAW3B,MAAK,SAAA4B,GACvC,IAAMJ,EAAQI,EAASnB,KAAI,SAAAoB,G,OAAOA,EAAIjC,I,IAChCkC,EAAY,CAChBnB,QACAC,aACAY,QACAV,cACAK,SACAF,WAEFc,QAAQC,IAAIF,E,OAIhBC,QAAQC,IAAIzB,E,IAIhB,IAAkCX,EAC1BC,C,IA4ECC,MAAM,GAAuBC,OAFlB,4CAEO,aAAmBA,OAH5B,mCAG4B,oBACzCC,MAAK,SAAAC,GACJ,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,M,IAElBL,KAAK+B,QAAQC,I","sources":["src/js/catalog-search.js"],"sourcesContent":["const refs = {\n  catalogForm: document.querySelector('#search-form'),\n  catalogGallery: document.querySelector('.catalog__gallery'),\n  navigation: document.querySelectorAll('.navigation__link'),\n};\n\nconst { catalogForm, catalogGallery, navigation } = refs;\n\nchangeCurrentNavigation();\n\nrefs.catalogForm.addEventListener('submit', onCatalogFormSubmit);\n\nfunction onCatalogFormSubmit(e) {\n  e.preventDefault();\n  inputValue = '';\n\n  const { catalogSearch } = e.currentTarget;\n\n  inputValue = catalogSearch.value;\n\n  if (inputValue === '') {\n    return;\n  }\n\n  fetchCatalogSearchMovies(inputValue).then(data => {\n    const movies = data.results.map(movie => {\n      const title = movie.title;\n      const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      const releaseYear = movie.release_date.substring(0, 4);\n      const movieId = movie.id;\n      const rating = movie.popularity;\n      fetchInByMovieName(movie.genre_ids).then(genreArr => {\n        const genre = genreArr.map(gnr => gnr.name);\n        const cardsData = {\n          title,\n          posterPath,\n          genre,\n          releaseYear,\n          rating,\n          movieId,\n        };\n        console.log(cardsData);\n      });\n    });\n\n    console.log(movies);\n  });\n}\n\nfunction fetchCatalogSearchMovies(name) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\n  return fetch(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1&query=${name}`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction fetchInByMovieName(ids) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}`)\n    .then(movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n\n      return movieData.json();\n    })\n    .then(data => {\n      const searcedGenre = data.genres.filter(genre => {\n        // if (genre.id === id) {\n        if (ids.includes(genre.id)) {\n          return genre.name;\n        }\n      });\n\n      return searcedGenre;\n    });\n}\n\nfunction createGallery(movies) {\n  const generatedHtml = movies\n    .map(({ title, posterPath, genre, releaseYear, rating, movieId }) => {\n      const htmlPart = `\n        // \n        `;\n\n      return htmlPart;\n    })\n    .join('');\n\n  return generatedHtml;\n}\n\nfunction changeCurrentNavigation() {\n  navigation[0].classList.remove('current');\n  navigation[2].classList.remove('current');\n  navigation[1].classList.add('current');\n}\n\n// ? from \"fetchCatalogSearchMovies\"\n// .then(data => {\n//   console.log(data.results);\n//   const movie = data.results[0];\n//   const movieId = movie.id;\n// getMoviesById(movieId).then(movie => {\n//   const title = movie.title;\n//   const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n//   const genres = movie.genres.map(genre => genre.name);\n//   const releaseYear = movie.release_date.substring(0, 4);\n//   console.log(title, posterPath, genres, releaseYear);\n// });\n// });\n\nfunction getMoviesById(id) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = `https://api.themoviedb.org/3/movie/603692`;\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`)\n    .then(movieData => {\n      if (!movieData.ok) {\n        throw new Error(movieData.status);\n      }\n\n      return movieData.json();\n    })\n    .then(console.log);\n}\n\ngetMoviesById();\n"],"names":["$dffebb1ffafe4b15$var$refs","catalogForm","document","querySelector","catalogGallery","navigation","querySelectorAll","$dffebb1ffafe4b15$var$navigation","classList","remove","add","addEventListener","e","preventDefault","inputValue","catalogSearch","currentTarget","value","name","API_KEY","fetch","concat","then","movieData","ok","Error","status","json","data","movies","results","map","movie","title","posterPath","poster_path","releaseYear","release_date","substring","movieId","id","rating","popularity","ids","genres","filter","genre","includes","$dffebb1ffafe4b15$var$fetchInByMovieName","genre_ids","genreArr","gnr","cardsData","console","log"],"version":3,"file":"catalog.00a17eae.js.map"}