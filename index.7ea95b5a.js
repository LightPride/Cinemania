const t=document.querySelector(".upcoming__insert");let n=0;async function e(t){const n=await fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=ec3ca0e4403710b7fc1497b1dbf32c54&language=en-US"),e=await n.json();return t.map((t=>e.genres.find((n=>n.id===t)).name)).join(", ")}!async function(){try{const i=(await fetch("https://api.themoviedb.org/3/movie/upcoming?api_key=ec3ca0e4403710b7fc1497b1dbf32c54&language=en-US&page=1").then((t=>{if(!t.ok)throw new Error(t.status);return t.json()}))).results;if(i.length>=1){const s=i[Math.floor(Math.random()*i.length)],a=await e(s.genre_ids),o=await async function({poster_path:t,backdrop_path:i,title:s,overview:a,popularity:o,vote_average:l,vote_count:c,release_date:r,genre_ids:p,id:m}){const d=await e(p);return n=m,`\n    <div class="desktop-positioning">\n      <div class="desktop-left">\n      \n      <picture class='.upcoming__poster'>\n      <source srcset="https://image.tmdb.org/t/p/original/${i}" media="(min-width: 1220px)" class='upcoming__poster-desktop' />\n      <source srcset="https://image.tmdb.org/t/p/original/${i}" media="(min-width: 768px)" class='upcoming__poster-tablet' />\n      <source srcset="https://image.tmdb.org/t/p/original/${t}" media="(min-width: 320px)" />\n      <img src="https://image.tmdb.org/t/p/original/${t}" alt="Movie Poster" style='width: 805px'/>\n    </picture>\n\n      </div>\n      <div class="desktop-right"> \n        <p class="upcoming__movie-name">${s}</p>\n\n        <div class="upcoming__infolist">\n          <div class="first-upcoming-div">\n\n            <ul class="rel-vote-list">\n              <li><p class="upcoming__about-item">Release date</p></li>\n              <li><p class="upcoming__about-item">Vote / Votes</p></li>\n            </ul>\n            <ul class="rel-vote-list-value" >\n              <li><p class="upcoming__release">${r}</p></li>\n              <li><p class="upcoming__vote"></p>\n              <span class="vote__styling">${l}</span>\n              / \n              <span class="vote__styling">${c}</span>\n              </li>\n            </ul>\n\n          </div>\n\n          <div class="second-upcoming-div">\n\n            <ul class="pop-gen-list">\n              <li><p class="upcoming__about-item">Popularity</p></li>\n              <li><p class="upcoming__about-item">Genre</p></li>\n            </ul>\n\n            <ul class="pop-gen-list-value">\n              <li><p class="upcoming__popularity">${o}</p></li>\n              <li><p class="upcoming__genre"></p>${d}</li>\n            </ul>\n\n          </div>\n        </div>\n\n        <p class="upcoming__about-title">ABOUT</p>\n        <p class="upcoming__about">${a}</p>\n\n        <button type="button" class="linear_btn" id="upcoming_btn">Remind me</button>\n      </div>\n    </div>\n  `}({...s,genreNames:a});t.insertAdjacentHTML("afterbegin",o);const l=document.getElementById("upcoming_btn");let c=localStorage.getItem("myLibraryIds"),r=JSON.parse(c);r.idsArray.includes(n)?l.textContent="Remove from my library":l.textContent="Remind me",l.addEventListener("click",(()=>{if(c=localStorage.getItem("myLibraryIds"),r=JSON.parse(c),r.idsArray.includes(n)){const t=r.idsArray.indexOf(n);return r.idsArray.splice(t,1),void localStorage.setItem("myLibraryIds",`${JSON.stringify(r)}`)}"Remind me"===l.textContent?l.textContent="Remove from my library":l.textContent="Remind me",r.idsArray.push(n),localStorage.setItem("myLibraryIds",`${JSON.stringify(r)}`)}))}}catch(t){console.log(t)}}();
//# sourceMappingURL=index.7ea95b5a.js.map
