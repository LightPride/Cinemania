{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,gBACpCC,eAAgBF,SAASC,cAAc,sBAGpBE,EAAmBL,EAAnBI,eA+ErB,SAASE,EAAcC,GAuBrB,OAtBsBA,EACnBC,KAAI,SAAAC,G,IAAGC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WAAYC,EAAWH,EAAXG,YAAaC,EAAWJ,EAAXI,YAAaC,EAAML,EAANK,OAAQC,EAAON,EAAPM,QACrDC,EAASJ,EAAY,GAgB3B,MAdiB,8CAGfK,OAFmCF,EAAQ,gJAEjBE,OAA1BN,EAAW,iBAE8BM,OAFfF,EAAQ,+DAGjBE,OADwBF,EAAQ,+BACpBE,OAAZF,EAAQ,MACTE,OADaP,EAAM,iCACQO,OAA3BF,EAAQ,qBAA+BE,OAAZF,EAAQ,MAAsCE,OAAlCD,EAAO,6BAAuCC,OAAZF,EAAQ,MAGtDE,OAH0DJ,EAAY,oFAG1DI,OAAZF,EAAQ,MAAWE,OAAPH,EAAO,iC,IAMjEI,KAAK,G,CApG8BlB,EAAhCC,YAEIkB,iBAAiB,UAG7B,SAA6BC,GAC3BA,EAAEC,iBACFC,WAAa,GACbC,KAAO,EAEP,IAAMC,EAAoBJ,EAAEK,cAApBD,cAIR,GAFAF,WAAaE,EAAcE,MAER,KAAfJ,WACF,QAoDIK,EAAU,mCAGTC,MAAM,GAAuBX,OAFnB,gDAEQ,aAAmBA,OAARU,IAAWE,MAAK,SAAAC,GAClD,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,M,KAzDAL,MAAK,SAAAb,GACyB,I,GAgCnD,SAAkCmB,EAAMZ,GACtC,IAAMI,EAAU,mCAGhB,OAAOC,MACL,GAAuBX,OAHR,4CAGH,aAA0CA,OAA/BU,EAAQ,yBAAqCV,OAAdM,EAAK,WAAcN,OAALkB,IACpEN,MAAK,SAAAC,GACL,IAAKA,EAAUC,GACb,MAAM,IAAIC,MAAMF,EAAUG,QAG5B,OAAOH,EAAUI,M,KA3CjBE,CAAyBd,WAAYC,MAAMM,M,EAAKQ,EAAAvC,EAAA,CAAAuC,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAC9ClC,EAEAmC,E,yEAFAnC,EAASkC,EAAKE,QAAQC,MAAM,EAAG,IAE/BF,EAAYnC,EAAOC,KAAI,SAAAqC,GAC3B,IAAMnC,EAAQmC,EAAMnC,MACdC,EAAa,kCAAoDM,OAAlB4B,EAAMC,aACrDjC,EAAcgC,EAAME,aAAaC,UAAU,EAAG,GAC9CjC,EAAU8B,EAAMI,GAChBnC,EAAS+B,EAAMK,aASrB,MAAO,CACLxC,QACAC,aACAC,YAXkBI,EAAOA,OACxBmC,QAAO,SAAAC,GACN,GAAIP,EAAMQ,UAAUC,SAASF,EAAMH,IACjC,OAAOG,C,IAGV5C,KAAI,SAAA4C,G,OAASA,EAAMjB,I,IAMpBtB,cACAC,SACAC,U,aAI6BT,EAAcoC,G,OAA/CrC,EAAekD,UAASC,EAAAC,K,oDA3B4BhB,G,qCA+C1D,IACQd,C,IAhERtB,EAAec,iBAAiB,SAsGhC,SAA+BC,GAC7B,GAA0B,OAAtBA,EAAEsC,OAAOC,SACX,OAGF,IAAMC,EAAaxC,EAAEsC,OAErBG,aAAaC,QAAQ,UAAW,GAAyB7C,OAAtB2C,EAAWG,QAAQd,I","sources":["src/js/catalog-search.js"],"sourcesContent":["const refs = {\n  catalogForm: document.querySelector('#search-form'),\n  catalogGallery: document.querySelector('.catalog__gallery'),\n};\n\nconst { catalogForm, catalogGallery } = refs;\n\ncatalogForm.addEventListener('submit', onCatalogFormSubmit);\ncatalogGallery.addEventListener('click', onCatalogGalleryClick);\n\nfunction onCatalogFormSubmit(e) {\n  e.preventDefault();\n  inputValue = '';\n  page = 1;\n\n  const { catalogSearch } = e.currentTarget;\n\n  inputValue = catalogSearch.value;\n\n  if (inputValue === '') {\n    return;\n  }\n\n  fetchMovieGenres().then(genres => {\n    fetchCatalogSearchMovies(inputValue, page).then(async data => {\n      const movies = data.results.slice(0, 10);\n\n      const cardsData = movies.map(movie => {\n        const title = movie.title;\n        const posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        const releaseYear = movie.release_date.substring(0, 4);\n        const movieId = movie.id;\n        const rating = movie.vote_average;\n        const movieGenres = genres.genres\n          .filter(genre => {\n            if (movie.genre_ids.includes(genre.id)) {\n              return genre;\n            }\n          })\n          .map(genre => genre.name);\n\n        return {\n          title,\n          posterPath,\n          movieGenres,\n          releaseYear,\n          rating,\n          movieId,\n        };\n      });\n\n      catalogGallery.innerHTML = await createGallery(cardsData);\n    });\n  });\n}\n\nfunction fetchCatalogSearchMovies(name, page) {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\n  return fetch(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${page}&query=${name}`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction fetchMovieGenres() {\n  const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n  const BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n\n  return fetch(`${BASE_URL}?api_key=${API_KEY}`).then(movieData => {\n    if (!movieData.ok) {\n      throw new Error(movieData.status);\n    }\n\n    return movieData.json();\n  });\n}\n\nfunction createGallery(movies) {\n  const generatedHtml = movies\n    .map(({ title, posterPath, movieGenres, releaseYear, rating, movieId }) => {\n      const genres = movieGenres[0];\n\n      const htmlPart = `\n        <li class=\"movie__card\" data-id=\"${movieId}\">\n        <div class=\"movie__card-poster\" style=\"background-image: linear-gradient(rgba(0,0,0,0),rgba(0, 0, 0, 0), rgba(0,0,0,1)),\n  url(${posterPath});\" data-id=\"${movieId}\"></div>\n\n        <div class=\"movie__card-info\" data-id=\"${movieId}\">\n          <h3 data-id=\"${movieId}\">${title}</h3>\n          <p data-id=\"${movieId}\"><span data-id=\"${movieId}\">${genres}</span> | <span data-id=\"${movieId}\">${releaseYear}</span></p>\n        </div>\n\n        <div class=\"movie__card-rating\" data-id=\"${movieId}\">${rating}</div>\n      </li> \n        `;\n\n      return htmlPart;\n    })\n    .join('');\n\n  return generatedHtml;\n}\n\nfunction onCatalogGalleryClick(e) {\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  const targetCard = e.target;\n\n  localStorage.setItem('film-id', `${targetCard.dataset.id}`);\n}\n"],"names":["$bpxeT","parcelRequire","$dffebb1ffafe4b15$var$refs","catalogForm","document","querySelector","catalogGallery","$dffebb1ffafe4b15$var$catalogGallery","$dffebb1ffafe4b15$var$createGallery","movies","map","param","title","posterPath","movieGenres","releaseYear","rating","movieId","genres","concat","join","addEventListener","e","preventDefault","inputValue","page","catalogSearch","currentTarget","value","API_KEY","fetch","then","movieData","ok","Error","status","json","name","$dffebb1ffafe4b15$var$fetchCatalogSearchMovies","$parcel$interopDefault","$2TvXO","mark","_callee","data","cardsData","results","slice","movie","poster_path","release_date","substring","id","vote_average","filter","genre","genre_ids","includes","innerHTML","_ctx","sent","target","nodeName","targetCard","localStorage","setItem","dataset"],"version":3,"file":"catalog.01f8308d.js.map"}