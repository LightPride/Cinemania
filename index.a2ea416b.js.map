{"mappings":"AAAA,MAKMA,EAAYC,SAASC,cAAc,qBAyBzCC,eAAeC,EAAaC,EAAQC,GAClCN,EAAUO,UAAY,GACtB,MAAMC,EAAkBP,SAASQ,cAAc,MAC/CD,EAAgBE,UAAUC,IAAI,eAC9BX,EAAUY,YAAYJ,GAEtB,MAAMK,EAAYR,EAAOS,MAAM,EAAGR,GAE5BS,QAAsBC,QAAQC,IAClCJ,EAAUK,KAAIf,MAAMgB,IAClB,MAAMC,QAlBZjB,eAA6BkB,GAC3B,MAAMC,QAAiBC,MACrB,0GAEIH,OAAEA,SAAiBE,EAASE,OAClC,OAAOH,EAASH,KAAIO,GAAWL,EAAOM,MAAKC,GAASA,EAAMC,KAAOH,KAAUI,OAAMC,KAAK,K,CAa7DC,CAAcZ,EAAMa,WACnCC,EAAiBd,EAAMe,MAAMpB,MAAM,EAAGK,EAAMe,MAAMC,QAAQ,MAC1DC,EAAcjB,EAAMkB,aAAavB,MAAM,EAAG,GAC1CwB,EAAcnB,EAAMoB,aAAaC,QAAQ,GAEzCC,EAAKxC,SAASQ,cAAc,MAClCgC,EAAG/B,UAAUC,IAAI,eAEjB,MAAM+B,EAAUzC,SAASQ,cAAc,OACvCiC,EAAQhC,UAAUC,IAAI,kBAEtB,MAAMgC,EAAe1C,SAASQ,cAAc,OAC5CkC,EAAajC,UAAUC,IAAI,eAE3B,MAAMuB,EAAQjC,SAASQ,cAAc,MACrCyB,EAAMxB,UAAUC,IAAI,sBACpBuB,EAAMU,UAAY,GAAGX,IAErB,MAAMY,EAAsB5C,SAASQ,cAAc,QACnDoC,EAAoBnC,UAAUC,IAAI,6BAClCkC,EAAoBD,UAAY,GAAGxB,OAAYgB,IAE/C,MAAMU,EAAc7C,SAASQ,cAAc,OAC3CqC,EAAYpC,UAAUC,IAAI,iBAC1B,MAAMoC,EAAgB9C,SAASQ,cAAc,QAC7CsC,EAAcH,UAAY,GAAGN,IAC7BQ,EAAYlC,YAAYmC,GAExB,MAAMC,EAAiB/C,SAASQ,cAAc,OAC9CuC,EAAetC,UAAUC,IAAI,iCAC7BqC,EAAepC,YAAYiC,GAC3BG,EAAepC,YAAYkC,GAE3B,MAAMG,EAAShD,SAASQ,cAAc,OAatC,OAZAwC,EAAOC,IAAM,kCAAkC/B,EAAMgC,cACrDF,EAAOG,IAAM,GAAGjC,EAAMe,qBACtBe,EAAOvC,UAAUC,IAAI,cACrBsC,EAAOI,aAAa,QAAS,OAE7BV,EAAa/B,YAAYsB,GACzBS,EAAa/B,YAAYoC,GAEzBN,EAAQ9B,YAAY+B,GACpBF,EAAG7B,YAAY8B,GACfD,EAAG7B,YAAYqC,GAERR,CAAE,KAIbjC,EAAgB8C,UAAUvC,E,CAG5B,SAASwC,IACP,MAAMjD,EAAQkD,OAAOC,WA5FQ,IA4F8B,EAAI,GAvFjEtD,iBACE,IACE,MAAMmB,QAAiBC,MACrB,mHAEF,IAAKD,EAASoC,GACZ,MAAM,IAAIC,MAAMrC,EAASsC,QAE3B,MAAQC,QAASC,SAAoBxC,EAASE,OAC9C,OAAOsC,C,CACP,MAAOC,GACPC,QAAQC,IAAIF,E,GA6EdG,GAAoBC,MAAK9D,GAAUD,EAAaC,EAAQC,I,CAG1DiD,IAEAC,OAAOY,iBAAiB,SAAUb","sources":["src/js/home-trends.js"],"sourcesContent":["const API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst TABLET_WIDTH_THRESHOLD = 768;\nconst colWidthClass = 'col-md-4';\n\nconst container = document.querySelector('#movies-container');\n\nasync function fetchTrendsMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    const { results: movieData } = await response.json();\n    return movieData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getGenresById(genreIds) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  const { genres } = await response.json();\n  return genreIds.map(genreId => genres.find(genre => genre.id === genreId)?.name).join(', ');\n}\n\nasync function renderMovies(movies, count) {\n  container.innerHTML = '';\n  const moviesContainer = document.createElement('ul');\n  moviesContainer.classList.add('weekly-list');\n  container.appendChild(moviesContainer);\n\n  const movieList = movies.slice(0, count);\n\n  const movieElements = await Promise.all(\n    movieList.map(async movie => {\n      const genres = await getGenresById(movie.genre_ids);\n      const shortenedTitle = movie.title.slice(0, movie.title.indexOf(':'));\n      const releaseYear = movie.release_date.slice(0, 4);\n      const ratingValue = movie.vote_average.toFixed(1);\n\n      const li = document.createElement('li');\n      li.classList.add('weekly-item');\n\n      const wrapper = document.createElement('div');\n      wrapper.classList.add('weekly-wrapper');\n\n      const movieDetails = document.createElement('div');\n      movieDetails.classList.add('weekly-info');\n\n      const title = document.createElement('h3');\n      title.classList.add('weekly-info__title');\n      title.innerText = `${shortenedTitle}`;\n\n      const releaseDateAndGenre = document.createElement('span');\n      releaseDateAndGenre.classList.add('weekly-info__genres__data');\n      releaseDateAndGenre.innerText = `${genres} | ${releaseYear}`;\n\n      const movieRating = document.createElement('div');\n      movieRating.classList.add('weekly-rating');\n      const ratingValueEl = document.createElement('span');\n      ratingValueEl.innerText = `${ratingValue}`;\n      movieRating.appendChild(ratingValueEl);\n\n      const additionalInfo = document.createElement('div');\n      additionalInfo.classList.add('catalog-list__additional-info');\n      additionalInfo.appendChild(releaseDateAndGenre);\n      additionalInfo.appendChild(movieRating);\n\n      const poster = document.createElement('img');\n      poster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      poster.alt = `${movie.title} movie poster`;\n      poster.classList.add('weekly-img');\n      poster.setAttribute('width', '500');\n\n      movieDetails.appendChild(title);\n      movieDetails.appendChild(additionalInfo);\n\n      wrapper.appendChild(movieDetails);\n      li.appendChild(wrapper);\n      li.appendChild(poster);\n\n      return li;\n    })\n  );\n\n  moviesContainer.append(...movieElements);\n}\n\nfunction getFetchedMovies() {\n  const count = window.innerWidth < TABLET_WIDTH_THRESHOLD ? 1 : 3;\n  fetchTrendsMovies().then(movies => renderMovies(movies, count));\n}\n\ngetFetchedMovies();\n\nwindow.addEventListener('resize', getFetchedMovies);\n"],"names":["$d3fe7bef80e36203$var$container","document","querySelector","async","$d3fe7bef80e36203$var$renderMovies","movies","count","innerHTML","moviesContainer","createElement","classList","add","appendChild","movieList","slice","movieElements","Promise","all","map","movie","genres","genreIds","response","fetch","json","genreId","find","genre","id","name","join","$d3fe7bef80e36203$var$getGenresById","genre_ids","shortenedTitle","title","indexOf","releaseYear","release_date","ratingValue","vote_average","toFixed","li","wrapper","movieDetails","innerText","releaseDateAndGenre","movieRating","ratingValueEl","additionalInfo","poster","src","poster_path","alt","setAttribute","append","$d3fe7bef80e36203$var$getFetchedMovies","window","innerWidth","ok","Error","status","results","movieData","error","console","log","$d3fe7bef80e36203$var$fetchTrendsMovies","then","addEventListener"],"version":3,"file":"index.a2ea416b.js.map"}